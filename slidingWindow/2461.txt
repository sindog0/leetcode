class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long ans=0;
        long long sum=0;
        unordered_map<int,int> m(k);//元素->元素出现次数
        int n=nums.size();
        for(int i=0;i<n;++i){
            sum+=nums[i]; 
            ++m[nums[i]];
            if(i<k-1){
                continue;
            }
           
            if(m.size()==k){
                ans=max(ans,sum);
            }
            sum-=nums[i-k+1];
            if(m[nums[i-k+1]]==1){
                m.erase(nums[i-k+1]);
            }
            else{
                --m[nums[i-k+1]];
            }
        }
        return ans;
    }
};