class Solution {
public:
    int maxScore(vector<int>& cardPoints, int k) {
        //逆向思考，先算出总点数，再计算出n-k的连续子数组的最小值
        int n=cardPoints.size();
        int ans=0,sum=0,minSum=INT_MAX,totalSum=0;
        for(int num:cardPoints){
            totalSum+=num;
        }
        for(int i=0;i<n;++i){
            sum+=cardPoints[i];
            if(i<n-k-1){
                continue;
            }
            minSum=min(sum,minSum);
            sum-=cardPoints[i-(n-k)+1];
        }
        ans=totalSum-minSum;
        if(n==k){
            return totalSum;
        }
        return ans;
    }
};