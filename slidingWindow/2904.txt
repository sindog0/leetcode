class Solution {
public:
    string shortestBeautifulSubstring(string s, int k) {
        string ans = "";
        int n = s.length(), left = 0, len = INT_MAX, cnt = 0;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '1') {
                cnt++;
            }
            while (cnt >= k) {
                if (cnt == k) {
                    int curlen = i - left + 1;
                    string cur = s.substr(left, curlen);
                    if (curlen < len || (curlen == len && cur < ans)) {
                        len = curlen;
                        ans = cur;
                    }
                }
                if (s[left] == '1') {
                    --cnt;
                }
                ++left;
            }
        }
        return ans;
    }
};

