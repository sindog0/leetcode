class Solution {
public:
    vector<int> getStrongest(vector<int>& arr, int k) {
        int n=arr.size();
        sort(arr.begin(),arr.end());
        int left=0,right=n-1;
        vector<int> ans;
        int m=arr[(n-1)/2];
        //排序后两端的值一定是离m最远的，此时前k次的结果就是最终结果
        for(int i=0;i<k;++i){
            if( abs(arr[left]-m) > abs(arr[right]-m)){
                ans.push_back(arr[left]);
                ++left;
            }else if(abs(arr[left]-m) == abs(arr[right]-m) && arr[left] >arr[right]){
                ans.push_back(arr[left]);
                ++left;
            }else{
                ans.push_back(arr[right]);
                --right;
            }
        }
        return ans;
    }
};
